package namedEntity.heuristic;

import java.util.Map;
import static java.util.Map.entry;

public abstract class Heuristic {

	private static Map<String, String> categoryMap = Map.ofEntries(
			entry("Microsoft", "Company"),
			entry("Apple", "Company"), 
			entry("Google", "Company"),
			entry("Amazon", "Company"),
			entry("Facebook", "Company"),
			entry("Twitter", "Company"),
			entry("Samsung", "Company"),
			entry("Toyota", "Company"),
			entry("Coca-Cola", "Company"),
			entry("McDonald's", "Company"),
			entry("Nike", "Company"),
			entry("Tesla", "Company"),
			entry("Netflix", "Company"),
			entry("Walmart", "Company"),
			entry("AT&T", "Company"),
			entry("Visa", "Company"),
			entry("JPMorgan Chase", "Company"),
			entry("Goldman Sachs", "Company"),
			entry("General Electric", "Company"),
			entry("Boeing", "Company"),
			entry("Ford", "Company"),
			entry("Musk", "PersonOthers"),
			entry("Biden", "PersonPolitics"),
			entry("Trump", "PersonPolitics"),
			entry("Messi", "PersonSports"),
			entry("Federer", "PersonSports"),
			entry("Logan", "PersonSports"),
			entry("New York", "City"),
			entry("London", "City"),
			entry("Paris", "City"),
			entry("Sydney", "City"),
			entry("Beijing", "City"),
			entry("Tokyo", "City"),
			entry("Rome", "City"),
			entry("Barcelona", "City"),
			entry("Rio de Janeiro", "City"),
			entry("Los Angeles", "City"),
			entry("Berlin", "City"),
			entry("Moscow", "City"),
			entry("Dubai", "City"),
			entry("Toronto", "City"),
			entry("Mumbai", "City"),
			entry("Johannesburg", "City"),
			entry("San Francisco", "City"),
			entry("Seoul", "City"),
			entry("Mexico City", "City"),
			entry("Hong Kong", "City"),
			entry("USA", "Country"),
			entry("Russia", "Country"),
			entry("United States", "Country"),
			entry("United Kingdom", "Country"),
			entry("France", "Country"),
			entry("Australia", "Country"),
			entry("Japan", "Country"),
			entry("Italy", "Country"),
			entry("Spain", "Country"),
			entry("Brazil", "Country"),
			entry("Argentina", "Country"),
			entry("India", "Country"),
			entry("Canada", "Country"),
			entry("South Africa", "Country"),
			entry("Mexico", "Country"),
			entry("Germany", "Country"),
			entry("South Korea", "Country"),
			entry("United Arab Emirates", "Country"),
			entry("Saudi Arabia", "Country"),
			entry("China", "Country"),
			entry("Donald Trump", "PersonPolitics"),
			entry("Joe Biden", "PersonPolitics"),
			entry("Barack Obama", "PersonPolitics"),
			entry("Hillary Clinton", "PersonPolitics"),
			entry("Vladimir Putin", "PersonPolitics"),
			entry("Angela Merkel", "PersonPolitics"),
			entry("Emmanuel Macron", "PersonPolitics"),
			entry("Narendra Modi", "PersonPolitics"),
			entry("Cristiano Ronaldo", "PersonSports"),
			entry("Lionel Messi", "PersonSports"),
			entry("LeBron James", "PersonSports"),
			entry("Serena Williams", "PersonSports"),
			entry("Roger Federer", "PersonSports"),
			entry("Usain Bolt", "PersonSports"),
			entry("Michael Phelps", "PersonSports"),
			entry("Megan Rapinoe", "PersonSports"),
			entry("Joe Rogan", "Person"),
			entry("Elon Musk", "Person"),
			entry("Beyoncé", "Person"),
			entry("Dalai Lama", "Person"),
			entry("Oprah Winfrey", "Person"),
			entry("Taylor Swift", "Person"),
			entry("Kamala Harris", "PersonPolitics"),
			entry("Justin Trudeau", "PersonPolitics"),
			entry("Jacinda Ardern", "PersonPolitics"),
			entry("Jair Bolsonaro", "PersonPolitics"),
			entry("Xi Jinping", "PersonPolitics"),
			entry("Kim Jong-un", "PersonPolitics"),
			entry("Viktor Orbán", "PersonPolitics"),
			entry("Rafael Nadal", "PersonSports"),
			entry("Naomi Osaka", "PersonSports"),
			entry("Simone Biles", "PersonSports"),
			entry("Luka Doncic", "PersonSports"),
			entry("Lewis Hamilton", "PersonSports"),
			entry("Tom Brady", "PersonSports"),
			entry("Sania Mirza", "PersonSports"),
			entry("Virat Kohli", "PersonSports"),
			entry("Doctor", "Person"),
			entry("Dr", "Person"),
			entry("Mr", "Person"),
			entry("Officer", "Person")
			);
	
	
	public String getCategory(String entity){
		return categoryMap.get(entity);
	}
		
	public boolean isInDic(String word){
		return categoryMap.containsKey(word);
	}
}
